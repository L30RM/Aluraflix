{"ast":null,"code":"import axios from \"axios\";\nexport const api = axios.create({\n  baseURL: \"https://examplealuraflix.onrender.com\"\n});\n\n//GET\nexport const buscarUltimoVideo = async (url, setData) => {\n  const respuesta = await api.get(url);\n  const datos = respuesta.data;\n  const datosInvertidos = datos.slice().reverse();\n  setData(datosInvertidos[0]);\n};\nexport const buscarCategoria = async (url, setData) => {\n  const respuesta = await api.get(url);\n  const datos = respuesta.data;\n  setData(datos);\n};\nexport const buscarVideos = async (url, setData) => {\n  const respuesta = await api.get(url);\n  const datos = respuesta.data;\n  const datosInvertidos = datos.reverse().slice(0, 6);\n  setData(datosInvertidos);\n};\nexport const buscarUsuario = async (url, setData) => {\n  const respuesta = await api.get(url);\n  const datos = respuesta.data;\n  setData(datos);\n};\nexport const buscarCategoriaEspecifica = async (url, setData) => {\n  const respuesta = await api.get(url);\n  const datos = respuesta.data;\n  setData(datos);\n};\n\n//POST\nexport const agregarVideo = async (id, titulo, URLVideo, descripcion, categoria) => {\n  api.post(\"/video\", {\n    id,\n    titulo,\n    URLVideo,\n    descripcion,\n    categoria\n  }).then(() => alert(\"Agregado agregado =)\")).catch(() => alert(\"Hay un error\"));\n};\nexport const agregarCategoria = async (id, titulo, descripcion, color) => {\n  api.post(\"/categoria\", {\n    id,\n    titulo,\n    descripcion,\n    color\n  }).then(() => alert(\"Categoría agregada =)\")).catch(() => alert(\"Hay un error\"));\n};\n\n//DELETE\nexport const borrarVideo = async id => {\n  api.delete(`/video/${id}`).then(() => alert(\"Video eliminado\")).catch(() => alert(\"Hay un error\"));\n};\nexport const borrarCategoria = async id => {\n  api.delete(`/categoria/${id}`).then(() => alert(\"Categoría eliminada\")).catch(() => alert(\"Hay un error\"));\n};\n\n//PUT\nexport const modificarCategoria = async (id, titulo, descripcion, color) => {\n  api.put(`/categoria/${id}`, {\n    id,\n    titulo,\n    descripcion,\n    color\n  }).then(() => alert(\"Categoría actualizada\")).catch(() => alert(\"Hay un error\"));\n};","map":{"version":3,"names":["axios","api","create","baseURL","buscarUltimoVideo","url","setData","respuesta","get","datos","data","datosInvertidos","slice","reverse","buscarCategoria","buscarVideos","buscarUsuario","buscarCategoriaEspecifica","agregarVideo","id","titulo","URLVideo","descripcion","categoria","post","then","alert","catch","agregarCategoria","color","borrarVideo","delete","borrarCategoria","modificarCategoria","put"],"sources":["C:/Users/HP/Documents/CURSO/backend/react/Aluraflix/src/client-service/client-service.js"],"sourcesContent":["import axios from \"axios\";\n\nexport const api = axios.create({\n  baseURL: \"https://examplealuraflix.onrender.com\",\n});\n\n//GET\nexport const buscarUltimoVideo = async (url, setData) => {\n  const respuesta = await api.get(url);\n  const datos = respuesta.data;\n  const datosInvertidos = datos.slice().reverse();\n  setData(datosInvertidos[0]);\n};\n\nexport const buscarCategoria = async (url, setData) => {\n  const respuesta = await api.get(url);\n  const datos = respuesta.data;\n  setData(datos);\n};\n\nexport const buscarVideos = async (url, setData) => {\n  const respuesta = await api.get(url);\n  const datos = respuesta.data;\n  const datosInvertidos = datos.reverse().slice(0, 6);\n  setData(datosInvertidos);\n};\n\nexport const buscarUsuario = async (url, setData) => {\n  const respuesta = await api.get(url);\n  const datos = respuesta.data;\n  setData(datos);\n};\n\nexport const buscarCategoriaEspecifica = async (url, setData) => {\n  const respuesta = await api.get(url);\n  const datos = respuesta.data;\n  setData(datos);\n};\n\n//POST\nexport const agregarVideo = async (\n  id,\n  titulo,\n  URLVideo,\n  descripcion,\n  categoria\n) => {\n  api\n    .post(\"/video\", {\n      id,\n      titulo,\n      URLVideo,\n      descripcion,\n      categoria,\n    })\n    .then(() => alert(\"Agregado agregado =)\"))\n    .catch(() => alert(\"Hay un error\"));\n};\n\nexport const agregarCategoria = async (id, titulo, descripcion, color) => {\n  api\n    .post(\"/categoria\", {\n      id,\n      titulo,\n      descripcion,\n      color,\n    })\n    .then(() => alert(\"Categoría agregada =)\"))\n    .catch(() => alert(\"Hay un error\"));\n};\n\n//DELETE\nexport const borrarVideo = async (id) => {\n  api\n    .delete(`/video/${id}`)\n    .then(() => alert(\"Video eliminado\"))\n    .catch(() => alert(\"Hay un error\"));\n};\n\nexport const borrarCategoria = async (id) => {\n  api\n    .delete(`/categoria/${id}`)\n    .then(() => alert(\"Categoría eliminada\"))\n    .catch(() => alert(\"Hay un error\"));\n};\n\n//PUT\nexport const modificarCategoria = async (id, titulo, descripcion, color) => {\n  api\n    .put(`/categoria/${id}`, {\n      id,\n      titulo,\n      descripcion,\n      color,\n    })\n    .then(() => alert(\"Categoría actualizada\"))\n    .catch(() => alert(\"Hay un error\"));\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}