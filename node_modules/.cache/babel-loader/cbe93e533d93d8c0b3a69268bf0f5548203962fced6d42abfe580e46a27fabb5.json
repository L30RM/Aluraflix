{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Documents\\\\CURSO\\\\backend\\\\react\\\\Aluraflix\\\\src\\\\componentes\\\\AdministrarCategoria\\\\AdministrarCategoria.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { borrarCategoria, buscarCategoria, buscarUsuario } from '../../client-service/client-service';\nimport './AdministrarCategoria.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AdministrarCategoria = () => {\n  _s();\n  const [categorias, setCategorias] = useState([]);\n  const [usuario, setUsuario] = useState([]);\n  const [swtch, setSwtch] = useState(false);\n  useEffect(() => {\n    buscarCategoria('/categoria', setCategorias).catch(error => alert(error));\n    buscarUsuario('/usuario', setUsuario).catch(error => alert(error));\n  }, [swtch]);\n  useEffect(() => {\n    buscarUsuario('/usuario', setUsuario).catch(error => alert(error));\n  }, []);\n  function activarEliminar(id) {\n    const validacionUsuario = prompt('Ingrese código de usuario');\n    usuario.forEach(user => {\n      if (validacionUsuario === user.codigoUsuario) {\n        borrarCategoria(id);\n        setSwtch(swtch => !swtch);\n      } else {\n        alert('Código de usuario inválido');\n      }\n    });\n  }\n  function actualizarCategorias() {\n    setSwtch(swtch => !swtch);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"titulo__tabla\",\n      children: \"Administar categor\\xEDas\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"button__actualizar-tabla\",\n      onClick: actualizarCategorias,\n      children: \"Actualizar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"tabla\",\n      children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Nombre\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Descripci\\xF3n\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Editar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Eliminar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 9\n        }, this), categorias.map(data => {\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: data.titulo\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: data.descripcion\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"select\",\n              children: /*#__PURE__*/_jsxDEV(Link, {\n                to: `/editarcategoria?id=${data.id}`,\n                children: \"Editar\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 45\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"select\",\n              id: data.id,\n              onClick: e => activarEliminar(e.target.id),\n              children: \"Eliminar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 21\n            }, this)]\n          }, data.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 24\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n};\n_s(AdministrarCategoria, \"OLA/nHOLsk8aMoCSk6xW74/hqYE=\");\n_c = AdministrarCategoria;\nexport default AdministrarCategoria;\nvar _c;\n$RefreshReg$(_c, \"AdministrarCategoria\");","map":{"version":3,"names":["useState","useEffect","Link","borrarCategoria","buscarCategoria","buscarUsuario","jsxDEV","_jsxDEV","Fragment","_Fragment","AdministrarCategoria","_s","categorias","setCategorias","usuario","setUsuario","swtch","setSwtch","catch","error","alert","activarEliminar","id","validacionUsuario","prompt","forEach","user","codigoUsuario","actualizarCategorias","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","data","titulo","descripcion","to","e","target","_c","$RefreshReg$"],"sources":["C:/Users/HP/Documents/CURSO/backend/react/Aluraflix/src/componentes/AdministrarCategoria/AdministrarCategoria.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { borrarCategoria, buscarCategoria, buscarUsuario } from '../../client-service/client-service';\nimport './AdministrarCategoria.css'\n\nconst AdministrarCategoria = () => {\n\n\n    const [categorias, setCategorias] = useState([])\n    const [usuario, setUsuario] = useState([])\n    const [ swtch, setSwtch] = useState(false);\n\n\n    useEffect(() => {\n        buscarCategoria('/categoria', setCategorias)\n        .catch(error => alert(error));\n        buscarUsuario('/usuario', setUsuario)\n        .catch(error => alert(error))     \n    }, [swtch])\n\n    useEffect(() => {\n        buscarUsuario('/usuario', setUsuario)\n        .catch(error => alert(error))     \n    }, [])\n\n\n\n    function activarEliminar(id) {\n        const validacionUsuario = prompt('Ingrese código de usuario');\n        usuario.forEach( (user) => {\n            if(validacionUsuario === user.codigoUsuario){\n                borrarCategoria(id)\n                setSwtch((swtch) => !swtch)\n            } else {\n                alert('Código de usuario inválido')\n            }\n        })\n        \n    }\n\n    function actualizarCategorias(){\n        setSwtch((swtch) => !swtch)\n    }\n\n    return <>\n    <h2 className='titulo__tabla'>Administar categorías</h2>\n    <button className='button__actualizar-tabla' onClick={actualizarCategorias}>Actualizar</button>\n    <table className='tabla'>\n        <tbody>\n        <tr>\n            <th>Nombre</th>\n            <th>Descripción</th>\n            <th >Editar</th>\n            <th >Eliminar</th>\n        </tr>\n        {\n            categorias.map((data) => {\n\n                return <tr key={data.id}>\n                    <td>{data.titulo}</td>\n                    <td>{data.descripcion}</td>\n                    <td className='select' ><Link to={`/editarcategoria?id=${data.id}`}>Editar</Link></td>\n                    <td className='select' id={data.id} onClick={(e) => activarEliminar(e.target.id)} >Eliminar</td>\n                </tr>\n            })\n        }\n        </tbody>\n    </table>\n\n    </>\n}\n\nexport default AdministrarCategoria;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}